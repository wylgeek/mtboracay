${extends("/goframe/function_layout.httl")}
<!--#macro(content)-->
<div style="padding: 5px 5px 0px 5px;">
    <div id="form1" method="post">
        <fieldset style="border:dotted 1px #227EA0;">
            <legend><span style="font-weight: bold">基础栏</span></legend>
            <table style="width:100%;height:100%;" cellpadding="5px,0px,5px,0px" class="nui-form-table">
                <tr>
                    <th class="nui-form-label"><label for="name">名称：</label></th>
                    <td>
                        <input id="name" name="name" class="nui-textbox" style="width: 97%" required="true"
                               vtype="maxLength:64" onvalidation="nameValidation"/>
                    </td>
                    <th class="nui-form-label"><label for="contractor">模型厂商：</label></th>
                    <td>
                        <input id="contractor" name="contractor" class="nui-combobox" valueField="pkId" textField="cnName" allowInput="true"
                               dataField="data" url="${basePath}/mm/contractor/select" style="width:97%" required="true"/>
                    </td>
                </tr>
                <tr>
                    <th class="nui-form-label"><label for="contractor">同步方式：</label></th>
                    <td>
                        <div class="checkbox">
                            <label>
                                <input id="synchro" name="synchro" type="checkbox" checked="checked">同步
                                <input id="asynchronous" name="asynchronous" type="checkbox">异步
                            </label>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th class="nui-form-label"><label for="describe">说明：</label></th>
                    <td colspan="3">
                        <input id="describe" name="describe" class="nui-textbox" style="width:99%" required="true"
                               vtype="maxLength:256"/>
                    </td>
                </tr>
                <tr>
                    <th class="nui-form-label"><label for="note">备注：</label></th>
                    <td colspan="3">
                        <input name="note" id="note" class="nui-textarea" style="height:60px; width:99%;"
                               vtype="maxLength:4000"/>
                    </td>
                </tr>
            </table>
        </fieldset>
        <fieldset style="border:dotted 1px #227EA0;">
            <legend><span style="font-weight: bold">字段栏</span></legend>

            <div style="padding: 5px 5px 0px 5px;">
                <div class="nui-toolbar" style="border-bottom: 0;">
                    <table style="width: 100%;">
                        <tr>
                            <td style="text-align: left;">
                                <b>查询字段</b>
                            </td>
                            <td style="text-align: right;">
                                <a class="nui-button" iconCls="icon-add" onclick="add1">添加</a>
                                <a class="nui-button" iconCls="icon-remove" onclick="remove1" enabled="false"
                                   id="remove1">删除</a>
                                <span class="separator"></span>
                                <a class="nui-button" iconCls="icon-upload" onclick="moveUp1" enabled="false"
                                   id="moveUp1">上移</a>
                                <a class="nui-button" iconCls="icon-download" onclick="moveDown1" enabled="false"
                                   id="moveDown1">下移</a>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="nui-fit" style="height:150px; padding: 0px 5px 0px 5px;">
                <div id="datagrid1" class="nui-datagrid" style="width:100%; height: 100%;" dataField="data"
                     idField="pkId" multiSelect="true" allowCellEdit="true" allowCellSelect="true" sortMode="client"
                     showPager="false" editNextOnEnterKey="true" editNextRowCell="true" onselectionchanged="selected1">
                    <div property="columns">
                        <div type="checkcolumn" headerAlign="center" width="5"></div>
                        <div type="indexcolumn" headerAlign="center" width="8">位置</div>
                        <div field="name" headerAlign="center" allowSort="true" width="30">名称<font
                                color="#FF0000">（必填）</font>
                            <input property="editor" class="nui-textbox" vtype="maxLength:64"
                                   onvalidation="colNameValidation1"/>
                        </div>
                        <div field="describe" headerAlign="center" allowSort="true" width="30">说明<font color="#FF0000">（必填）</font>
                            <input property="editor" class="nui-textbox" vtype="maxLength:256"/>
                        </div>
                        <div field="colType" headerAlign="center" allowSort="true" width="20">类型
                            <input property="editor" class="nui-dictcombobox" valueField="dictId" textField="dictName"
                                   dictTypeId="IQ_MD_COL_DATA_TYPE" value="STRING" vtype="maxLength:32"/>
                        </div>
                        <div field="length" headerAlign="center" allowSort="true" width="15">长度
                            <input property="editor" class="nui-textbox" vtype="maxLength:32"/>
                        </div>
                        <div field="note" headerAlign="center" allowSort="true" width="30">备注
                            <input property="editor" class="nui-textbox" vtype="maxLength:4000"/>
                        </div>
                    </div>
                </div>
            </div>

            <div style="padding: 5px 5px 0px 5px;">
                <div class="nui-toolbar" style="border-bottom: 0;">
                    <table style="width: 100%;">
                        <tr>
                            <td style="text-align: left;">
                                <b>返回字段</b>
                            </td>
                            <td style="text-align: right;">
                                <a class="nui-button" iconCls="icon-add" onclick="add2">添加</a>
                                <a class="nui-button" iconCls="icon-remove" onclick="remove2" enabled="false"
                                   id="remove2">删除</a>
                                <span class="separator"></span>
                                <a class="nui-button" iconCls="icon-upload" onclick="moveUp2" enabled="false"
                                   id="moveUp2">上移</a>
                                <a class="nui-button" iconCls="icon-download" onclick="moveDown2" enabled="false"
                                   id="moveDown2">下移</a>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="nui-fit" style="height:200px; padding: 0px 5px 0px 5px;">
                <div id="datagrid2" class="nui-datagrid" style="width:100%; height: 100%;" dataField="data"
                     idField="pkId" multiSelect="true" allowCellEdit="true" allowCellSelect="true" sortMode="client"
                     showPager="false" editNextOnEnterKey="true" editNextRowCell="true" onselectionchanged="selected2">
                    <div property="columns">
                        <div type="checkcolumn" headerAlign="center" width="5"></div>
                        <div type="indexcolumn" headerAlign="center" width="8">位置</div>
                        <div field="name" headerAlign="center" allowSort="true" width="30">名称<font
                                color="#FF0000">（必填）</font>
                            <input property="editor" class="nui-textbox" vtype="maxLength:64"
                                   onvalidation="colNameValidation2"/>
                        </div>
                        <div field="describe" headerAlign="center" allowSort="true" width="30">说明<font color="#FF0000">（必填）</font>
                            <input property="editor" class="nui-textbox" vtype="maxLength:256"/>
                        </div>
                        <div field="colType" headerAlign="center" allowSort="true" width="20">类型
                            <input property="editor" class="nui-dictcombobox" valueField="dictId" textField="dictName"
                                   dictTypeId="IQ_MD_COL_DATA_TYPE" value="STRING" vtype="maxLength:32"/>
                        </div>
                        <div field="length" headerAlign="center" allowSort="true" width="15">长度
                            <input property="editor" class="nui-textbox" vtype="maxLength:32"/>
                        </div>
                        <div field="note" headerAlign="center" allowSort="true" width="30">备注
                            <input property="editor" class="nui-textbox" vtype="maxLength:4000"/>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>

        <div class="nui-toolbar" style="text-align:center;padding-top:10px;padding-bottom:5px;" borderStyle="border:0;">
            <a class="nui-button" style="" iconCls="icon-save" onclick="save" id="saveButton">保存</a>
            <span style="display:inline-block;width:25px;"></span>
            <a class="nui-button" style="" iconCls="icon-cancel" onclick="cancel">返回</a>
        </div>
    </div>
</div>

<script type="text/javascript">
    var form1;
    var grid1;
    var grid2;
    /**
     * 按需加载资源文件
     */
    require(['jquery', 'nui'], function ($, nui) {
        nui.parse();
        form1 = new nui.Form("#form1");
        grid1 = nui.get("datagrid1");
        grid2 = nui.get("datagrid2");
    });


    /**
     * 选中
     */
    function selected1() {
        var rows = grid1.getSelecteds();
        if (rows.length == 1) {
            nui.get("remove1").enable();
            nui.get("moveUp1").enable();
            nui.get("moveDown1").enable();
        } else if (rows.length == 0) {
            nui.get("remove1").disable();
            nui.get("moveUp1").disable();
            nui.get("moveDown1").disable();
        } else {
            nui.get("remove1").enable();
            nui.get("moveUp1").enable();
            nui.get("moveDown1").enable();
        }
    }

    /**
     * 选中
     */
    function selected2() {
        var rows = grid2.getSelecteds();
        if (rows.length == 1) {
            nui.get("remove2").enable();
            nui.get("moveUp2").enable();
            nui.get("moveDown2").enable();
        } else if (rows.length == 0) {
            nui.get("remove2").disable();
            nui.get("moveUp2").disable();
            nui.get("moveDown2").disable();
        } else {
            nui.get("remove2").enable();
            nui.get("moveUp2").enable();
            nui.get("moveDown2").enable();
        }
    }

    function selected3(e) {
        var rows = e.selecteds;
        if (rows.length == 1) {
            nui.get("remove3").enable();
            nui.get("moveUp3").enable();
            nui.get("moveDown3").enable();
        } else if (rows.length == 0) {
            nui.get("remove3").disable();
            nui.get("moveUp3").disable();
            nui.get("moveDown3").disable();
        } else {
            nui.get("remove3").enable();
            nui.get("moveUp3").enable();
            nui.get("moveDown3").enable();
        }
    }

    /**
     * grid1字段名称变化时触发检查
     */
    function colNameValidation1(e) {
        paramNameValidation(e,grid1);
    }

    /**
     * grid2字段名称变化时触发检查
     */
    function colNameValidation2(e) {
        paramNameValidation(e,grid2);
    }

    /**
     * 字段名称变化时触发检查
     */
    function paramNameValidation(e,grid) {
        if (e.isValid) {
            var count = 0;
            var rows = grid.getData(true, true);
            for (var i = 0, len = rows.length; i < len; i++) {
                if (e.value == rows[i].name) {
                    count++;
                }
                if(count == 1){
                    e.errorText = "名称已存在";
                    e.isValid = false;
                    return false;
                }
            }
        }
    }


    /**
     * 保存
     */
    function save() {
       if(getCheckBoxValue()=='0'){
           nui.alert('请选择同步方式!');
           return ;
       }

       var saveData = getSaveData();

       if (!saveData ) {
           return;
       }
       saveData.modelinfo.modelType = getCheckBoxValue();
       var json = nui.encode(saveData);
       // --发送信息--
       form1.loading("正在保存中,请稍等...");
       //禁用保存按钮
       nui.get("saveButton").disable();
       $.ajax({
           url: "${basePath}/mm/modelInfo/insert",
           type: 'POST',
           data: json,
           cache: false,
           contentType: 'application/json',
           success: function (result) {
               if (result.status == true) {
                   nui.alert(result.message);
                   CloseWindow("success");
               } else {
                   nui.alert(result.message, "系统提示", function (action) {
                       if (action == "ok" || action == "close") {
                           CloseWindow("failed");
                       }
                   });
               }
               form1.unmask();
               //解除保存按钮禁用
               nui.get("saveButton").enable();
           }
       });
    }

    /**
     * 获取需要保存的数据
     */
    function getSaveData() {
        var modelinfo = getBaseData();
        if (!modelinfo) {
            return;
        }

        var modelExcuteParam = getQueryColsData();
        if(!modelExcuteParam){
            return ;
        }

        var modelReturnParam = getReturnColsData();
        if(!modelReturnParam){
            return ;
        }
        var saveData = {
            "modelinfo":modelinfo,
            "modelExcuteParam":modelExcuteParam,
            "modelReturnParam":modelReturnParam
        };
        return saveData;
    }

    /**
     * 获取基础数据
     */
    function getBaseData() {
        form1.validate();
        if (form1.isValid() == false) {
            return;
        }
        var baseData = form1.getData(true, true);
        return baseData;
    }

    /**
     * 获取查询字段数据
     */
    function getQueryColsData() {
        var status = true;
        var queryColsData = grid1.getData(true, true);
        if (queryColsData == null || queryColsData.length == 0) {
            nui.alert("【查询字段】的信息不能为空!");
            return;
        }
        $.each(queryColsData, function (_index, record) {
            record.seq = grid1.indexOf(record) + 1;
            if (record.name == null || record.name == "") {
                nui.alert("【查询字段】的位置" + record.seq + "：【名称】不能为空!");
                status = false;
                return false;
            }
            if (checkPattern(record.name) == false) {
                nui.alert("【查询字段】的位置" + record.seq + "：【名称】只能包含字母、数字、下划线，且以字母开头!");
                status = false;
                return false;
            }
            if (record.describe == null || record.describe == "") {
                nui.alert("【查询字段】的位置" + record.seq + "：【说明】不能为空!");
                status = false;
                return false;
            }
            if (record.colType == null || record.colType == "") {
                nui.alert("【查询字段】的位置" + record.seq + "：【类型】不能为空!");
                status = false;
                return false;
            }
            if(record.colType == "CHAR" || record.colType == "VARCHAR" ||  record.colType == "DECIMAL"){
                if(record.length == null || record.length == "") {
                    nui.alert("【查询字段】的位置" + record.seq + "：【长度】不能为空!");
                    status = false;
                    return false;
                }
                if(record.colType == "DECIMAL") {
                    var re = new RegExp("^[1-9][0-9]{0,1},?[0-9]{0,2}$");
                    if (!re.test(record.length)) {
                        nui.alert("【查询字段】的位置" + record.seq + "：【长度】错误!");
                        status = false;
                        return false;
                    }
                }
                if(record.colType == "CHAR" || record.colType == "VARCHAR"){
                    var re = new RegExp("^[1-9][0-9]{0,3}$");
                    if (!re.test(record.length)) {
                        nui.alert("【查询字段】的位置" + record.seq + "：【长度】错误!");
                        status = false;
                        return false;
                    }
                }
            }
        });
        if (!status) {
            return;
        }
        return queryColsData;
    }

    /**
     * 获取返回字段数据
     */
    function getReturnColsData() {
        var status = true;
        var returnColsData = grid2.getData(true, true);
        if (returnColsData == null || returnColsData.length == 0) {
            nui.alert("【返回字段】的信息不能为空!");
            return;
        }
        $.each(returnColsData, function (_index, record) {
            record.seq = grid2.indexOf(record) + 1;
            if (record.name == null || record.name == "") {
                nui.alert("【返回字段】的位置" + record.seq + "：【名称】不能为空!");
                status = false;
                return false;
            }
            if (checkPattern(record.name) == false) {
                nui.alert("【返回字段】的位置" + record.seq + "：【名称】只能包含字母、数字、下划线，且以字母开头!");
                status = false;
                return false;
            }
            if (record.describe == null || record.describe == "") {
                nui.alert("【返回字段】的位置" + record.seq + "：【说明】不能为空!");
                status = false;
                return false;
            }
            if (record.colType == null || record.colType == "") {
                nui.alert("【返回字段】的位置" + record.seq + "：【类型】不能为空!");
                status = false;
                return false;
            }
            if(record.colType == "CHAR" || record.colType == "VARCHAR" ||  record.colType == "DECIMAL"){
                if(record.length == null || record.length == "") {
                    nui.alert("【返回字段】的位置" + record.seq + "：【长度】不能为空!");
                    status = false;
                    return false;
                }
                if(record.colType == "DECIMAL") {
                    var re = new RegExp("^[1-9][0-9]{0,1},?[0-9]{0,2}$");
                    if (!re.test(record.length)) {
                        nui.alert("【返回字段】的位置" + record.seq + "：【长度】错误!");
                        status = false;
                        return false;
                    }
                }
                if(record.colType == "CHAR" || record.colType == "VARCHAR"){
                    var re = new RegExp("^[1-9][0-9]{0,3}$");
                    if (!re.test(record.length)) {
                        nui.alert("【返回字段】的位置" + record.seq + "：【长度】错误!");
                        status = false;
                        return false;
                    }
                }
            }
        });
        if (!status) {
            return;
        }
        if (checkRepetitionName(returnColsData)) {
            nui.alert("【返回字段】中存在重复【名称】，请检查后再提交！");
            return;
        }
        return returnColsData;
    }

    /**
     * 检查参数列表名称是否重复
     */
    function checkRepetitionName(propsData) {
        //算法1、遍历
        var repetFlg = false;
        $.each(propsData, function (_index, record) {
            var repetCount = 0;
            $.each(propsData, function (i, item) {
                if (record.name == item.name) {
                    repetCount++;
                }
            });
            if (repetCount > 1) {
                repetFlg = true;
            }
        });
        return repetFlg;
    }

    /**
     * 名称变化时触发检查
     */
    function nameValidation(e) {
        if (e.isValid) {
            if (checkPattern(e.value) == false) {
                e.errorText = "只能包含字母、数字、下划线，且以字母开头";
                e.isValid = false;
            }
            var result = isExist(e.value);
            if (result.status) {
                e.errorText = "名称已存在";
                e.isValid = false;
            }
        }
    }

    /**
     * 检查是否满足字母、数字、下划线，且以字母开头
     */
    function checkPattern(v) {
        var re = new RegExp("^[A-Za-z][A-Za-z0-9_]{0,63}$");
        if (re.test(v)) {
            return true;
        }
        return false;
    }

    /**
     * 检查是否满足字母、数字、下划线，且以字母开头
     */
    function checkPattern(v) {
        var re = new RegExp("^[A-Za-z][A-Za-z0-9_]{0,63}$");
        if (re.test(v)) {
            return true;
        }
        return false;
    }

    /**
     * 检查是否满足字母、数字、点、下划线，且以字母开头
     * 检查配置参数
     */
    function checkParams(v) {
        var re  =new RegExp("^[A-Za-z][A-Za-z\.0-9_]{0,128}$");
        if (re.test(v)) {
            return true;
        }
        return false;
    }
    /**
     * 检查是否存在
     */
    function isExist(value) {
        //debugger;
        var result = "";
        $.ajax({
            url: "${basePath}/mm/modelInfo/checkName/" + value,
            type: 'POST',
            cache: false,
            async: false,
            contentType: 'application/json',
            success: function (text) {
                result = text;
            }
        });
        return result;
    }

    /**
     * 返回
     */
    function cancel() {
        CloseWindow("onCancel");
    }

    /**
     * 得到同步方式
     */
    function getCheckBoxValue(){
        var modelType = '0';
        var modelTypeDom = document.getElementById('synchro');
        if(modelTypeDom && modelTypeDom.checked){
            modelType = '1';
        }
        var asynchronousDom = document.getElementById('asynchronous');
        if(asynchronousDom && asynchronousDom.checked){
            modelType += ',2';
        }
        if(modelType == '0'){
            return '0' ;
        }
        if(modelType.substring(0,1)=='0'){
            return modelType.substring(2,modelType.length)
        }
        return modelType;
    }

    /**
     * 添加
     */
    function add1() {
        var rows = grid1.getData(true, true);
        var length = rows.length;
        var newRow = {colType: "STRING"};
        grid1.addRow(newRow, length);
    }
    function add2() {
        var rows = grid2.getData(true, true);
        var length = rows.length;
        var newRow = {colType: "STRING"};
        grid2.addRow(newRow, length);
    }

    /**
     * 删除
     */
    function remove1() {
        var rows = grid1.getSelecteds();
        if (rows.length > 0) {
            grid1.removeRows(rows, true);
        } else {
            nui.alert("请至少选中一条记录!");
        }
    }
    function remove2() {
        var rows = grid2.getSelecteds();
        if (rows.length > 0) {
            grid2.removeRows(rows, true);
        } else {
            nui.alert("请至少选中一条记录!");
        }
    }

    /**
     * 选中项上移
     */
    function moveUp1() {
        var rows = grid1.getSelecteds();
        grid1.moveUp(rows);
    }
    function moveUp2() {
        var rows = grid2.getSelecteds();
        grid2.moveUp(rows);
    }

    /**
     * 选中项下移
     */
    function moveDown1() {
        var rows = grid1.getSelecteds();
        grid1.moveDown(rows);
    }
    function moveDown2() {
        var rows = grid2.getSelecteds();
        grid2.moveDown(rows);
    }


</script>
<!--#end-->