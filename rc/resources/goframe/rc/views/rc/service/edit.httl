${extends("/goframe/function_layout.httl")}
<!--#macro(content)-->
<div style="padding: 5px 5px 0px 5px;">
    <div id="form1" method="post">
        <input name="pkId" class="nui-hidden"/>
        <input name="delFlg" class="nui-hidden"/>
        <input name="crtUser" class="nui-hidden"/>
        <input name="crtTime" class="nui-hidden"/>
        <input name="uptUser" class="nui-hidden"/>
        <input name="uptTime" class="nui-hidden"/>
        <input name="status" class="nui-hidden"/>
        <table style="width:100%;height:100%;" cellpadding="5px,0px,5px,0px" class="nui-form-table">
            <tr>
                <th class="nui-form-label"><label for="name">名称：</label></th>
                <td colspan="3">
                    <input id="name" name="name" class="nui-textbox" style="width: 99%" required="true" onvalidation="nameValidation"/>
                </td>
            </tr>

            <tr>
                <th class="nui-form-label"><label for="type">应用类型：</label></th>
                <td>
                    <input id="type" name="type"class="nui-dictcombobox nui-form-input" style="width: 90%;"  emptyText="请选择应用类型" onvaluechanged="selectApps"
                           valueField="dictId" textField="dictName" dictTypeId="UDSP_SERVICE_TYPE" required="true"/>
                </td>
                <th class="nui-form-label"><label for="appId">应用名称：</label></th>
                <td>
                    <div id="appId" class="nui-combobox" style="width:97%;"  popupWidth="400" textField="name" valueField="pkId"
                         dataField="data" name="appId" multiSelect="false" allowInput="true" required="true"
                         onvalidation = "checkAppIdAndType" >
                        <div property="columns">
                            <div header="名称" field="name"></div>
                            <div header="说明" field="describe"></div>
                        </div>
                    </div>
                    <!--<input id="appId" name="appId" class="nui-combobox" valueField="pkId" textField="name" style="width:97%"
                           required="true" onvalidation = "checkAppIdAndType" />-->
                </td>
            </tr>

            <tr>
                <th class="nui-form-label"><label for="describe">说明：</label></th>
                <td colspan="3">
                    <input name="describe" id="describe" class="nui-textarea" style="height:60px; width:99%;"
                           vtype="maxLength:256"/>
                </td>
            </tr>
        </table>
        <div class="nui-toolbar" style="text-align:center;padding-top:10px;padding-bottom:5px;" borderStyle="border:0;">
            <a class="nui-button" style="" iconCls="icon-save" onclick="save" id="saveButton">保存</a>
            <span style="display:inline-block;width:25px;"></span>
            <a class="nui-button" style="" iconCls="icon-cancel" onclick="cancel">返回</a>
        </div>
    </div>
</div>

<script type="text/javascript">
    var form1;
    var grid1;
    var appId_nuiObject;
    var originName;
    var originAppId;
    var originType;
    /**
     * 按需加载资源文件
     */
    require(['jquery', 'nui'], function ($, nui) {
        nui.parse();
        form1 = new nui.Form("#form1");
        grid1 = nui.get("datagrid1");
        appId_nuiObject=nui.get("appId");
        appId_nuiObject.setRequired(true);
        setData();
    });

    /**
     * 读取详情
     */
    function setData() {
        $.ajax({
            url: "${basePath}/rc/service/select/${pkId}",
            type: 'POST',
            cache: false,
            contentType: 'application/json',
            success: function (text) {
                if (text.data != null) {
                    //var obj = nui.decode(text.data);
                    var obj=text.data;
                    form1.setData(obj);
                    form1.setChanged(false);
                    originName = obj.name;
                    originAppId = obj.appId;
                    originType = obj.type;
                    initApp();
                }
            }
        });
    }
    /**
     * 保存
     */
    function save() {
        //debugger;
        form1.validate();
        if (form1.isValid() == false) {
            return;
        }
        var saveData = form1.getData(true, true);
        if (!saveData) {
            return;
        }
        var json = nui.encode(saveData);
        // --发送信息--
        form1.loading("正在保存中,请稍等...");
        //禁用保存按钮
        nui.get("saveButton").disable();
        $.ajax({
            url: "${basePath}/rc/service/update",
            type: 'POST',
            data: json,
            cache: false,
            contentType: 'application/json',
            success: function (result) {
                if (result.status == true) {
                    nui.alert(result.message);
                    CloseWindow("success");
                } else {
                    nui.alert(result.message, "系统提示", function (action) {
                        if (action == "ok" || action == "close") {
                            CloseWindow("failed");
                        }
                    });
                }
                form1.unmask();
                //解除保存按钮禁用
                nui.get("saveButton").enable();
            }
        });
    }



    function selectApps(e){
        appId_nuiObject.setValue("");
        selectAppsDetail(e.value);
    }

    /**
     *初始化应用下拉列表
     */
    function initApp(){
        selectAppsDetail(originType);
        //debugger;
        var appData=appId_nuiObject.getData();
        var index=0;
        $.each(appData,function(i,item){
            if(item.pkId==originAppId){
                index=i;
            }
        })
        appId_nuiObject.select(index);
    }

    function selectAppsDetail(type){
        $.ajax({
            url: "${basePath}/rc/service/selectApps/"+type,
            type: 'POST',
            cache: false,
            contentType: 'application/json',
            success: function (result) {
                if (result.status ) {
                    appId_nuiObject.setData(result.data);
                }
            }
        });
    }




    /**
     * 名称变化时触发检查
     */
    function nameValidation(e) {
        if (e.isValid) {
            if (checkPattern(e.value) == false) {
                e.errorText = "只能包含字母、数字、下划线，且以字母开头";
                e.isValid = false;
            }
            if(originName==e.value){
                return;
            }
            var result = isExist(e.value);
            if (result.status) {
                e.errorText = "名称已存在";
                e.isValid = false;
            }
        }
    }

    /**
     * 检查是否满足字母、数字、下划线，且以字母开头
     */
    function checkPattern(v) {
        var re = new RegExp("^[A-Za-z][A-Za-z0-9_]{0,63}$");
        if (re.test(v)) {
            return true;
        }
        return false;
    }
    /**
     * 检查是否存在
     */
    function isExist(value) {
        //debugger;
        var result = "";
        $.ajax({
            url: "${basePath}/rc/service/checkName/" + value,
            type: 'POST',
            cache: false,
            async: false,
            contentType: 'application/json',
            success: function (text) {
                result = text;
            }
        });
        return result;
    }

    /**
     * 返回
     */
    function cancel() {
        CloseWindow("onCancel");
    }

    /**
     * 检测应用类型和应用名称组成的服务注册是否已经存在数据库了
     * @param e
     * @returns {string}
     */

    function checkAppIdAndType(e){
        var type = nui.get("type").getValue("");
        var appId = nui.get("appId").getValue("");
        if(originAppId==appId&&originType==type){
            return true;
        }
        var result = isExistByTypeAndAppId(type,appId);
        if(result.status){
            e.errorText = "应用类型和应用名称对应的服务注册信息已经存在";
            e.isValid = false;
        }

    }

    function isExistByTypeAndAppId(type,appId){
        var result = "";
        $.ajax({
            url: "${basePath}/rc/service/checkAppIdAndType/" + type+"/"+appId,
            type: 'POST',
            cache: false,
            async: false,
            contentType: 'application/json',
            success: function (text) {
                result = text;
            }
        });
        return result;
    }

</script>
<!--#end-->